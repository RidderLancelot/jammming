{"ast":null,"code":"var _jsxFileName = \"/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/App.js\",\n  _s = $RefreshSig$();\nimport '../styles/App.css';\nimport '../styles/Header.css';\nimport SearchBar from './SearchBar';\nimport Playlist from './Playlist';\nimport Tracklist from './Tracklist';\nimport { useState } from 'react';\nimport { searchTracks, savePlaylistToSpotify } from './Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [playlist, setPlaylist] = useState([{\n    index: 1,\n    name: \"bad ones\",\n    artists: [\"Tate Mcrae\"],\n    album: \"Too Young to Be Sad\",\n    id: \"6CYT0souHUHKTO4EMzTUFg\",\n    uri: \"spotify:track:6CYT0souHUHKTO4EMzTUFg\"\n  }]);\n  const [playlistName, setPlaylistName] = useState(\"Baddest Motherfucker\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  function addTrackToPlaylist(track) {\n    setPlaylist(prevPlaylist => [...prevPlaylist, {\n      ...track,\n      index: prevPlaylist.length + 1,\n      uri: track.uri || `spotify:track:${track.id}`\n    }]);\n  }\n  const handlePlaylistNameChange = event => {\n    setPlaylistName(event.target.value);\n  };\n  function removeTrackFromPlaylist(index) {\n    setPlaylist(prevPlaylist => {\n      const updatedPlaylist = prevPlaylist.filter(track => track.index !== index);\n      return updatedPlaylist.map((track, index) => ({\n        ...track,\n        index: index + 1\n      }));\n    });\n  }\n  async function handleSearch(query) {\n    setLoading(true);\n    const results = await searchTracks(query);\n    setSearchResults(results);\n    setLoading(false);\n  }\n  async function handleSavePlaylist() {\n    setSaving(true);\n    const uris = playlist.map(track => track.uri);\n    try {\n      await savePlaylistToSpotify(playlistName, uris);\n      alert('Playlist saved to your Spotify account!');\n      setPlaylist([]);\n    } catch (e) {\n      alert('Failed to save playlist. Please try again.');\n    }\n    setSaving(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Tracklist, {\n          tracks: searchResults,\n          onAddTrack: addTrackToPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlist: playlist,\n        onRemoveTrack: removeTrackFromPlaylist,\n        playlistName: playlistName,\n        handlePlaylistNameChange: handlePlaylistNameChange,\n        onSavePlaylist: handleSavePlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), saving && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Saving playlist to Spotify...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeg vil gerne have en knap, hvor man kan se mine mest lyttede sange+kunstnere i hver m\\xE5ned(5)+\\xE5r(10)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5q9I4xJZT8J81GIt5gMb2eYfYZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SearchBar","Playlist","Tracklist","useState","searchTracks","savePlaylistToSpotify","jsxDEV","_jsxDEV","App","_s","playlist","setPlaylist","index","name","artists","album","id","uri","playlistName","setPlaylistName","searchResults","setSearchResults","loading","setLoading","saving","setSaving","addTrackToPlaylist","track","prevPlaylist","length","handlePlaylistNameChange","event","target","value","removeTrackFromPlaylist","updatedPlaylist","filter","map","handleSearch","query","results","handleSavePlaylist","uris","alert","e","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","tracks","onAddTrack","onRemoveTrack","onSavePlaylist","_c","$RefreshReg$"],"sources":["/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/App.js"],"sourcesContent":["import '../styles/App.css';\nimport '../styles/Header.css';\nimport SearchBar from './SearchBar';\nimport Playlist from './Playlist';\nimport Tracklist from './Tracklist';\nimport { useState } from 'react';\nimport { searchTracks, savePlaylistToSpotify } from './Spotify';\n\nfunction App() {\n  const [playlist, setPlaylist] = useState([\n    { index: 1, name: \"bad ones\", artists: [\"Tate Mcrae\"], album: \"Too Young to Be Sad\", id: \"6CYT0souHUHKTO4EMzTUFg\", uri: \"spotify:track:6CYT0souHUHKTO4EMzTUFg\" }\n  ]);\n  const [playlistName, setPlaylistName] = useState(\"Baddest Motherfucker\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  function addTrackToPlaylist(track) {\n    setPlaylist((prevPlaylist) => [...prevPlaylist, { ...track, index: prevPlaylist.length + 1, uri: track.uri || `spotify:track:${track.id}` }]);\n  }\n\n  const handlePlaylistNameChange = (event) => {\n    setPlaylistName(event.target.value);\n  };\n\n  function removeTrackFromPlaylist(index) {\n    setPlaylist((prevPlaylist) => {\n      const updatedPlaylist = prevPlaylist.filter((track) => track.index !== index);\n      return updatedPlaylist.map((track, index) => ({\n        ...track,\n        index: index + 1,\n      }));\n    });\n  }\n\n  async function handleSearch(query) {\n    setLoading(true);\n    const results = await searchTracks(query);\n    setSearchResults(results);\n    setLoading(false);\n  }\n\n  async function handleSavePlaylist() {\n    setSaving(true);\n    const uris = playlist.map(track => track.uri);\n    try {\n      await savePlaylistToSpotify(playlistName, uris);\n      alert('Playlist saved to your Spotify account!');\n      setPlaylist([]);\n    } catch (e) {\n      alert('Failed to save playlist. Please try again.');\n    }\n    setSaving(false);\n  }\n\n  return (\n    <div className=\"all\">\n      <SearchBar onSearch={handleSearch} />\n      <div className='flex'>\n        <div className=\"SearchResults\">\n          <h1>Results</h1>\n          {loading ? <p>Loading...</p> : <Tracklist tracks={searchResults} onAddTrack={addTrackToPlaylist} />}\n        </div>\n        <Playlist playlist={playlist} onRemoveTrack={removeTrackFromPlaylist} playlistName={playlistName} handlePlaylistNameChange={handlePlaylistNameChange} onSavePlaylist={handleSavePlaylist} />\n      </div>\n      {saving && <p>Saving playlist to Spotify...</p>}\n      <p>Jeg vil gerne have en knap, hvor man kan se mine mest lyttede sange+kunstnere i hver måned(5)+år(10)</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}