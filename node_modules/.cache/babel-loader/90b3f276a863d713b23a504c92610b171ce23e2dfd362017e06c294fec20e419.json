{"ast":null,"code":"var _jsxFileName = \"/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/Playlists.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getAccessToken, getCurrentUserId } from './Spotify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlists() {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [tracksLoading, setTracksLoading] = useState(false);\n  const [duplicates, setDuplicates] = useState([]);\n  const [fixing, setFixing] = useState(false);\n  const [checked, setChecked] = useState(false); // Add a state to track if checkDuplicates was run\n  const [checking, setChecking] = useState(false);\n  const [checkProgress, setCheckProgress] = useState(0);\n  const [showDupDetails, setShowDupDetails] = useState(false);\n\n  // Pagination state\n  const [trackPage, setTrackPage] = useState(0);\n  const [totalTracks, setTotalTracks] = useState(0);\n  const TRACKS_PER_PAGE = 100;\n  useEffect(() => {\n    async function fetchUserAndPlaylists() {\n      try {\n        const token = getAccessToken();\n        if (!token) throw new Error('No access token');\n        const uid = await getCurrentUserId();\n        let allPlaylists = [];\n        let url = 'https://api.spotify.com/v1/me/playlists?limit=50';\n        while (url) {\n          const response = await fetch(url, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (!response.ok) throw new Error('Failed to load playlists');\n          const data = await response.json();\n          allPlaylists = allPlaylists.concat(data.items || []);\n          url = data.next;\n        }\n        // Only show playlists owned by the user\n        const ownedPlaylists = allPlaylists.filter(p => p.owner && p.owner.id === uid);\n        setPlaylists(ownedPlaylists);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchUserAndPlaylists();\n  }, []);\n\n  // Only fetch one page at a time for display\n  async function fetchTracksPage(playlistId, page) {\n    const token = getAccessToken();\n    const offset = page * TRACKS_PER_PAGE;\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=${TRACKS_PER_PAGE}&offset=${offset}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return {\n      items: data.items || [],\n      total: data.total || 0\n    };\n  }\n  async function handleSelect(playlist) {\n    setSelected(playlist);\n    setTracksLoading(true);\n    setTracks([]);\n    setDuplicates([]);\n    setChecked(false);\n    setShowDupDetails(false);\n    setTrackPage(0);\n    try {\n      const {\n        items,\n        total\n      } = await fetchTracksPage(playlist.id, 0);\n      setTracks(items);\n      setTotalTracks(total);\n    } finally {\n      setTracksLoading(false);\n    }\n  }\n\n  // For duplicate check, fetch all tracks in batches and show progress\n  async function checkDuplicates() {\n    if (!selected) return;\n    setChecked(false);\n    setDuplicates([]);\n    setChecking(true);\n    let allTracks = [];\n    let offset = 0;\n    let percent = 0;\n    const token = getAccessToken();\n    while (offset < totalTracks) {\n      const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (data.items) allTracks = allTracks.concat(data.items);\n      offset += 100;\n      percent = Math.min(100, Math.round(offset / totalTracks * 100));\n      setCheckProgress(percent);\n    }\n    const count = {};\n    const info = {};\n    for (const item of allTracks) {\n      const t = item.track;\n      const id = t === null || t === void 0 ? void 0 : t.id;\n      if (!id) continue;\n      count[id] = (count[id] || 0) + 1;\n      if (!info[id]) {\n        var _t$artists, _t$album, _t$album$images, _t$album$images$;\n        info[id] = {\n          name: t === null || t === void 0 ? void 0 : t.name,\n          artists: (t === null || t === void 0 ? void 0 : (_t$artists = t.artists) === null || _t$artists === void 0 ? void 0 : _t$artists.map(a => a.name).join(', ')) || '',\n          imageUrl: (t === null || t === void 0 ? void 0 : (_t$album = t.album) === null || _t$album === void 0 ? void 0 : (_t$album$images = _t$album.images) === null || _t$album$images === void 0 ? void 0 : (_t$album$images$ = _t$album$images[0]) === null || _t$album$images$ === void 0 ? void 0 : _t$album$images$.url) || ''\n        };\n      }\n    }\n    const dups = Object.entries(count).filter(([_, c]) => c > 1).map(([id, c]) => {\n      var _info$id, _info$id2, _info$id3;\n      return {\n        id,\n        name: (_info$id = info[id]) === null || _info$id === void 0 ? void 0 : _info$id.name,\n        artists: (_info$id2 = info[id]) === null || _info$id2 === void 0 ? void 0 : _info$id2.artists,\n        imageUrl: (_info$id3 = info[id]) === null || _info$id3 === void 0 ? void 0 : _info$id3.imageUrl,\n        count: c\n      };\n    }).sort((a, b) => b.count - a.count || (a.name || '').localeCompare(b.name || ''));\n    setDuplicates(dups);\n    setChecked(true);\n    setChecking(false);\n    setCheckProgress(0);\n  }\n  async function fixDuplicates() {\n    setFixing(true);\n    try {\n      const token = getAccessToken();\n      // Fetch all tracks in the playlist (not just paged)\n      let allTracks = [];\n      let offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (data.items) allTracks = allTracks.concat(data.items);\n        offset += 100;\n      }\n      // Find duplicates and their positions\n      const seen = new Map(); // id -> [positions]\n      allTracks.forEach((item, idx) => {\n        var _item$track;\n        const trackId = (_item$track = item.track) === null || _item$track === void 0 ? void 0 : _item$track.id;\n        if (!trackId) return;\n        if (!seen.has(trackId)) seen.set(trackId, []);\n        seen.get(trackId).push(idx);\n      });\n      // For each duplicate, remove all by URI, then re-add one at the first occurrence\n      for (const [, positions] of seen.entries()) {\n        if (positions.length > 1) {\n          const uri = allTracks[positions[0]].track.uri;\n          // Remove all occurrences by URI\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'DELETE',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              tracks: [{\n                uri\n              }]\n            })\n          });\n          // Re-add one copy at the position of the first occurrence\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'POST',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              uris: [uri],\n              position: positions[0]\n            })\n          });\n        }\n      }\n      // Refetch tracks after removal\n      let newTracks = [];\n      offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (data.items) newTracks = newTracks.concat(data.items);\n        offset += 100;\n      }\n      setTracks(newTracks);\n      setDuplicates([]);\n    } catch (e) {\n      alert('Failed to update playlist on Spotify.');\n      console.error(e);\n    }\n    setFixing(false);\n  }\n\n  // Pagination controls\n  const pagedTracks = tracks.slice(trackPage * TRACKS_PER_PAGE, (trackPage + 1) * TRACKS_PER_PAGE);\n  const totalPages = Math.ceil(tracks.length / TRACKS_PER_PAGE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlaylistsPage\",\n    style: {\n      maxWidth: 800,\n      margin: '2rem auto',\n      background: '#fff',\n      borderRadius: 16,\n      boxShadow: '0 4px 24px rgba(68,22,68,0.12)',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: 'rgb(68,22,68)',\n        marginBottom: '2rem'\n      },\n      children: \"Your Spotify Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0,\n          width: '40%',\n          borderRight: '1px solid #eee',\n          maxHeight: '400px',\n          overflowY: 'auto'\n        },\n        children: playlists.map(playlist => {\n          var _playlist$images$;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: 24,\n              cursor: 'pointer',\n              background: (selected === null || selected === void 0 ? void 0 : selected.id) === playlist.id ? '#f3e6fa' : 'transparent',\n              borderRadius: 8,\n              padding: 8,\n              transition: 'background 0.2s'\n            },\n            onClick: () => handleSelect(playlist),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n              alt: \"cover\",\n              width: 64,\n              height: 64,\n              style: {\n                verticalAlign: 'middle',\n                borderRadius: 8,\n                boxShadow: '0 2px 8px rgba(68,22,68,0.08)',\n                objectFit: 'cover',\n                width: 64,\n                height: 64\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 16,\n                fontWeight: 600,\n                color: 'rgb(68,22,68)'\n              },\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 8,\n                color: '#888',\n                fontSize: 12\n              },\n              children: [playlist.tracks.total, \" tracks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, playlist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 0\n        },\n        children: selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: 'rgb(68,22,68)',\n              marginBottom: 0\n            },\n            children: selected.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              alignItems: 'center',\n              gap: 16,\n              margin: '16px 0 24px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkDuplicates,\n              style: {\n                padding: '0.5rem 1.2rem',\n                background: 'linear-gradient(90deg, #441644 60%, #a259c6 100%)',\n                color: '#fff',\n                border: 'none',\n                borderRadius: 6,\n                fontWeight: 'bold',\n                cursor: 'pointer',\n                boxShadow: '0 2px 8px rgba(68,22,68,0.08)',\n                letterSpacing: 1\n              },\n              disabled: checking,\n              children: checking ? `Checking... ${checkProgress}%` : 'Check Duplicates'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), checking && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flexBasis: '100%',\n                height: 6,\n                background: '#f1eafa',\n                borderRadius: 999,\n                overflow: 'hidden'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '100%',\n                  width: `${checkProgress}%`,\n                  background: '#a259c6',\n                  transition: 'width 0.2s ease'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this), duplicates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flexBasis: '100%',\n                background: '#fff7fb',\n                color: '#6e1a6e',\n                padding: '0.9rem 1.2rem',\n                borderRadius: 12,\n                boxShadow: '0 2px 10px rgba(165,89,198,0.15)',\n                border: '1px solid #f3d8f7'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  gap: 12,\n                  flexWrap: 'wrap'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: 700\n                    },\n                    children: \"Duplicates found:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      display: 'inline-block',\n                      background: '#6e1a6e',\n                      color: '#fff',\n                      borderRadius: 999,\n                      padding: '0.2rem 0.6rem',\n                      fontWeight: 700\n                    },\n                    children: duplicates.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#9b4fb8'\n                    },\n                    children: [\"Extras: \", duplicates.reduce((a, d) => a + (d.count - 1), 0)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    gap: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setShowDupDetails(s => !s),\n                    style: {\n                      padding: '0.35rem 0.9rem',\n                      background: '#f3e6fa',\n                      color: '#6e1a6e',\n                      border: '1px solid #e9d7f2',\n                      borderRadius: 8,\n                      fontWeight: 700,\n                      cursor: 'pointer'\n                    },\n                    children: [\" \", showDupDetails ? 'Hide details' : 'Show details', \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      padding: '0.35rem 1rem',\n                      background: 'linear-gradient(90deg, #a00 60%, #d66 100%)',\n                      color: '#fff',\n                      border: 'none',\n                      borderRadius: 8,\n                      fontWeight: 'bold',\n                      cursor: 'pointer',\n                      boxShadow: '0 1px 6px rgba(221,102,102,0.3)'\n                    },\n                    onClick: fixDuplicates,\n                    disabled: fixing,\n                    children: fixing ? 'Fixing...' : 'Fix all'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this), showDupDetails && /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  listStyle: 'none',\n                  padding: 0,\n                  marginTop: 12,\n                  display: 'grid',\n                  gridTemplateColumns: 'repeat(2, minmax(0, 1fr))',\n                  gap: 12\n                },\n                children: duplicates.map(dup => /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 12,\n                    padding: '0.6rem',\n                    borderRadius: 10,\n                    background: '#fff',\n                    border: '1px solid #f0e1f5'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: dup.imageUrl,\n                    alt: dup.name,\n                    width: 44,\n                    height: 44,\n                    style: {\n                      borderRadius: 6,\n                      objectFit: 'cover',\n                      background: '#eee'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minWidth: 0,\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontWeight: 600,\n                        color: '#441644',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis'\n                      },\n                      children: dup.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#8c6a9b',\n                        fontSize: 13,\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis'\n                      },\n                      children: dup.artists\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    title: `${dup.count} occurrences`,\n                    style: {\n                      minWidth: 34,\n                      height: 34,\n                      borderRadius: 999,\n                      background: '#6e1a6e',\n                      color: '#fff',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontWeight: 800\n                    },\n                    children: dup.count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 31\n                  }, this)]\n                }, dup.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this), checked && duplicates.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#eafbe7',\n                color: '#1a7f37',\n                padding: '0.8rem 1.1rem',\n                borderRadius: 12,\n                fontWeight: 'bold',\n                boxShadow: '0 2px 8px #eafbe7',\n                border: '1px solid #c9efc4'\n              },\n              children: \"\\u2705 No duplicates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), tracksLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading tracks...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyle: 'none',\n                padding: 0,\n                maxHeight: '350px',\n                overflowY: 'auto'\n              },\n              children: pagedTracks.map((item, idx) => {\n                var _item$track2, _item$track3, _item$track4, _item$track4$artists;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    marginBottom: 12,\n                    padding: 8,\n                    borderRadius: 6,\n                    background: '#faf6ff',\n                    boxShadow: '0 1px 4px rgba(68,22,68,0.04)'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: 500\n                    },\n                    children: (_item$track3 = item.track) === null || _item$track3 === void 0 ? void 0 : _item$track3.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginLeft: 8,\n                      color: '#888'\n                    },\n                    children: (_item$track4 = item.track) === null || _item$track4 === void 0 ? void 0 : (_item$track4$artists = _item$track4.artists) === null || _item$track4$artists === void 0 ? void 0 : _item$track4$artists.map(a => a.name).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 27\n                  }, this)]\n                }, ((_item$track2 = item.track) === null || _item$track2 === void 0 ? void 0 : _item$track2.id) || idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 8,\n                marginTop: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setTrackPage(p => Math.max(0, p - 1)),\n                disabled: trackPage === 0,\n                style: {\n                  padding: '0.3rem 1rem',\n                  borderRadius: 6,\n                  border: 'none',\n                  background: '#eee',\n                  color: '#441644',\n                  fontWeight: 'bold',\n                  cursor: trackPage === 0 ? 'not-allowed' : 'pointer'\n                },\n                children: \"Prev\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  alignSelf: 'center'\n                },\n                children: [\"Page \", trackPage + 1, \" of \", totalPages]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setTrackPage(p => Math.min(totalPages - 1, p + 1)),\n                disabled: trackPage === totalPages - 1,\n                style: {\n                  padding: '0.3rem 1rem',\n                  borderRadius: 6,\n                  border: 'none',\n                  background: '#eee',\n                  color: '#441644',\n                  fontWeight: 'bold',\n                  cursor: trackPage === totalPages - 1 ? 'not-allowed' : 'pointer'\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#888',\n            textAlign: 'center',\n            marginTop: '4rem'\n          },\n          children: \"Select a playlist to view its tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlists, \"2t2PS0YfIqB+uQ1lUmL6PcAq3i0=\");\n_c = Playlists;\nexport default Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["useEffect","useState","getAccessToken","getCurrentUserId","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlists","_s","playlists","setPlaylists","loading","setLoading","error","setError","selected","setSelected","tracks","setTracks","tracksLoading","setTracksLoading","duplicates","setDuplicates","fixing","setFixing","checked","setChecked","checking","setChecking","checkProgress","setCheckProgress","showDupDetails","setShowDupDetails","trackPage","setTrackPage","totalTracks","setTotalTracks","TRACKS_PER_PAGE","fetchUserAndPlaylists","token","Error","uid","allPlaylists","url","response","fetch","headers","Authorization","ok","data","json","concat","items","next","ownedPlaylists","filter","p","owner","id","err","message","fetchTracksPage","playlistId","page","offset","total","handleSelect","playlist","checkDuplicates","allTracks","percent","Math","min","round","count","info","item","t","track","_t$artists","_t$album","_t$album$images","_t$album$images$","name","artists","map","a","join","imageUrl","album","images","dups","Object","entries","_","c","_info$id","_info$id2","_info$id3","sort","b","localeCompare","fixDuplicates","seen","Map","forEach","idx","_item$track","trackId","has","set","get","push","positions","length","uri","method","body","JSON","stringify","uris","position","newTracks","e","alert","console","pagedTracks","slice","totalPages","ceil","className","style","maxWidth","margin","background","borderRadius","boxShadow","padding","children","textAlign","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","listStyle","width","borderRight","maxHeight","overflowY","_playlist$images$","cursor","transition","onClick","src","alt","height","verticalAlign","objectFit","marginLeft","fontWeight","fontSize","flex","minWidth","flexWrap","alignItems","border","letterSpacing","disabled","flexBasis","overflow","justifyContent","reduce","d","s","marginTop","gridTemplateColumns","dup","whiteSpace","textOverflow","title","_item$track2","_item$track3","_item$track4","_item$track4$artists","max","alignSelf","_c","$RefreshReg$"],"sources":["/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/Playlists.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getAccessToken, getCurrentUserId } from './Spotify';\n\nfunction Playlists() {\n  const [playlists, setPlaylists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [tracksLoading, setTracksLoading] = useState(false);\n  const [duplicates, setDuplicates] = useState([]);\n  const [fixing, setFixing] = useState(false);\n  const [checked, setChecked] = useState(false); // Add a state to track if checkDuplicates was run\n  const [checking, setChecking] = useState(false);\n  const [checkProgress, setCheckProgress] = useState(0);\n  const [showDupDetails, setShowDupDetails] = useState(false);\n\n  // Pagination state\n  const [trackPage, setTrackPage] = useState(0);\n  const [totalTracks, setTotalTracks] = useState(0);\n  const TRACKS_PER_PAGE = 100;\n\n  useEffect(() => {\n    async function fetchUserAndPlaylists() {\n      try {\n        const token = getAccessToken();\n        if (!token) throw new Error('No access token');\n        const uid = await getCurrentUserId();\n        let allPlaylists = [];\n        let url = 'https://api.spotify.com/v1/me/playlists?limit=50';\n        while (url) {\n          const response = await fetch(url, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          if (!response.ok) throw new Error('Failed to load playlists');\n          const data = await response.json();\n          allPlaylists = allPlaylists.concat(data.items || []);\n          url = data.next;\n        }\n        // Only show playlists owned by the user\n        const ownedPlaylists = allPlaylists.filter(p => p.owner && p.owner.id === uid);\n        setPlaylists(ownedPlaylists);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchUserAndPlaylists();\n  }, []);\n\n  // Only fetch one page at a time for display\n  async function fetchTracksPage(playlistId, page) {\n    const token = getAccessToken();\n    const offset = page * TRACKS_PER_PAGE;\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=${TRACKS_PER_PAGE}&offset=${offset}`,\n      { headers: { Authorization: `Bearer ${token}` } });\n    const data = await response.json();\n    return { items: data.items || [], total: data.total || 0 };\n  }\n\n  async function handleSelect(playlist) {\n    setSelected(playlist);\n    setTracksLoading(true);\n    setTracks([]);\n    setDuplicates([]);\n    setChecked(false);\n    setShowDupDetails(false);\n    setTrackPage(0);\n    try {\n      const { items, total } = await fetchTracksPage(playlist.id, 0);\n      setTracks(items);\n      setTotalTracks(total);\n    } finally {\n      setTracksLoading(false);\n    }\n  }\n\n  // For duplicate check, fetch all tracks in batches and show progress\n  async function checkDuplicates() {\n    if (!selected) return;\n    setChecked(false);\n    setDuplicates([]);\n    setChecking(true);\n    let allTracks = [];\n    let offset = 0;\n    let percent = 0;\n    const token = getAccessToken();\n    while (offset < totalTracks) {\n      const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`,\n        { headers: { Authorization: `Bearer ${token}` } });\n      const data = await response.json();\n      if (data.items) allTracks = allTracks.concat(data.items);\n      offset += 100;\n      percent = Math.min(100, Math.round((offset / totalTracks) * 100));\n      setCheckProgress(percent);\n    }\n    const count = {};\n    const info = {};\n    for (const item of allTracks) {\n      const t = item.track;\n      const id = t?.id;\n      if (!id) continue;\n      count[id] = (count[id] || 0) + 1;\n      if (!info[id]) {\n        info[id] = {\n          name: t?.name,\n          artists: t?.artists?.map(a=>a.name).join(', ') || '',\n          imageUrl: t?.album?.images?.[0]?.url || '',\n        };\n      }\n    }\n    const dups = Object.entries(count)\n      .filter(([_, c]) => c > 1)\n      .map(([id, c]) => ({ id, name: info[id]?.name, artists: info[id]?.artists, imageUrl: info[id]?.imageUrl, count: c }))\n      .sort((a, b) => (b.count - a.count) || (a.name || '').localeCompare(b.name || ''));\n    setDuplicates(dups);\n    setChecked(true);\n    setChecking(false);\n    setCheckProgress(0);\n  }\n\n  async function fixDuplicates() {\n    setFixing(true);\n    try {\n      const token = getAccessToken();\n      // Fetch all tracks in the playlist (not just paged)\n      let allTracks = [];\n      let offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`,\n          { headers: { Authorization: `Bearer ${token}` } });\n        const data = await response.json();\n        if (data.items) allTracks = allTracks.concat(data.items);\n        offset += 100;\n      }\n      // Find duplicates and their positions\n      const seen = new Map(); // id -> [positions]\n      allTracks.forEach((item, idx) => {\n        const trackId = item.track?.id;\n        if (!trackId) return;\n        if (!seen.has(trackId)) seen.set(trackId, []);\n        seen.get(trackId).push(idx);\n      });\n      // For each duplicate, remove all by URI, then re-add one at the first occurrence\n      for (const [, positions] of seen.entries()) {\n        if (positions.length > 1) {\n          const uri = allTracks[positions[0]].track.uri;\n          // Remove all occurrences by URI\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'DELETE',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ tracks: [{ uri }] }),\n          });\n          // Re-add one copy at the position of the first occurrence\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'POST',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ uris: [uri], position: positions[0] }),\n          });\n        }\n      }\n      // Refetch tracks after removal\n      let newTracks = [];\n      offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`,\n          { headers: { Authorization: `Bearer ${token}` } });\n        const data = await response.json();\n        if (data.items) newTracks = newTracks.concat(data.items);\n        offset += 100;\n      }\n      setTracks(newTracks);\n      setDuplicates([]);\n    } catch (e) {\n      alert('Failed to update playlist on Spotify.');\n      console.error(e);\n    }\n    setFixing(false);\n  }\n\n  // Pagination controls\n  const pagedTracks = tracks.slice(trackPage * TRACKS_PER_PAGE, (trackPage + 1) * TRACKS_PER_PAGE);\n  const totalPages = Math.ceil(tracks.length / TRACKS_PER_PAGE);\n\n  return (\n    <div className=\"PlaylistsPage\" style={{maxWidth: 800, margin: '2rem auto', background: '#fff', borderRadius: 16, boxShadow: '0 4px 24px rgba(68,22,68,0.12)', padding: '2rem'}}>\n      <h1 style={{textAlign:'center', color:'rgb(68,22,68)', marginBottom: '2rem'}}>Your Spotify Playlists</h1>\n      {loading && <p>Loading...</p>}\n      {error && <p style={{color:'red'}}>Error: {error}</p>}\n      {!loading && !error && (\n        <div style={{display:'flex', gap: '2rem'}}>\n          <ul style={{listStyle:'none', padding:0, width:'40%', borderRight:'1px solid #eee', maxHeight: '400px', overflowY: 'auto'}}>\n            {playlists.map((playlist) => (\n              <li key={playlist.id} style={{marginBottom: 24, cursor:'pointer', background:selected?.id===playlist.id?'#f3e6fa':'transparent', borderRadius:8, padding:8, transition:'background 0.2s'}} onClick={() => handleSelect(playlist)}>\n                <img src={playlist.images[0]?.url} alt=\"cover\" width={64} height={64} style={{verticalAlign:'middle', borderRadius:8, boxShadow:'0 2px 8px rgba(68,22,68,0.08)', objectFit:'cover', width:64, height:64}} />\n                <span style={{marginLeft: 16, fontWeight:600, color:'rgb(68,22,68)'}}>{playlist.name}</span>\n                <span style={{marginLeft: 8, color:'#888', fontSize:12}}>{playlist.tracks.total} tracks</span>\n              </li>\n            ))}\n          </ul>\n          <div style={{flex:1, minWidth:0}}>\n            {selected ? (\n              <div>\n                <h2 style={{color:'rgb(68,22,68)', marginBottom: 0}}>{selected.name}</h2>\n                <div style={{display:'flex',flexWrap:'wrap',alignItems:'center',gap:16,margin:'16px 0 24px 0'}}>\n                  <button onClick={checkDuplicates} style={{padding:'0.5rem 1.2rem',background:'linear-gradient(90deg, #441644 60%, #a259c6 100%)',color:'#fff',border:'none',borderRadius:6,fontWeight:'bold',cursor:'pointer',boxShadow:'0 2px 8px rgba(68,22,68,0.08)',letterSpacing:1}} disabled={checking}>\n                    {checking ? `Checking... ${checkProgress}%` : 'Check Duplicates'}\n                  </button>\n                  {checking && (\n                    <div style={{flexBasis:'100%', height: 6, background:'#f1eafa', borderRadius: 999, overflow:'hidden'}}>\n                      <div style={{height:'100%', width: `${checkProgress}%`, background:'#a259c6', transition:'width 0.2s ease'}} />\n                    </div>\n                  )}\n\n                  {duplicates.length > 0 && (\n                    <div style={{flexBasis:'100%', background:'#fff7fb',color:'#6e1a6e',padding:'0.9rem 1.2rem',borderRadius:12,boxShadow:'0 2px 10px rgba(165,89,198,0.15)',border:'1px solid #f3d8f7'}}>\n                      <div style={{display:'flex',alignItems:'center',justifyContent:'space-between',gap:12, flexWrap:'wrap'}}>\n                        <div style={{display:'flex', alignItems:'center', gap:10}}>\n                          <span style={{fontWeight:700}}>Duplicates found:</span>\n                          <span style={{display:'inline-block', background:'#6e1a6e', color:'#fff', borderRadius:999, padding:'0.2rem 0.6rem', fontWeight:700}}>{duplicates.length}</span>\n                          <span style={{color:'#9b4fb8'}}>Extras: {duplicates.reduce((a,d)=>a + (d.count - 1), 0)}</span>\n                        </div>\n                        <div style={{display:'flex', gap:10}}>\n                          <button onClick={() => setShowDupDetails(s => !s)} style={{padding:'0.35rem 0.9rem',background:'#f3e6fa',color:'#6e1a6e',border:'1px solid #e9d7f2',borderRadius:8,fontWeight:700,cursor:'pointer'}}> {showDupDetails ? 'Hide details' : 'Show details'} </button>\n                          <button style={{padding:'0.35rem 1rem',background:'linear-gradient(90deg, #a00 60%, #d66 100%)',color:'#fff',border:'none',borderRadius:8,fontWeight:'bold',cursor:'pointer',boxShadow:'0 1px 6px rgba(221,102,102,0.3)'}} onClick={fixDuplicates} disabled={fixing}>{fixing ? 'Fixing...' : 'Fix all'}</button>\n                        </div>\n                      </div>\n\n                      {showDupDetails && (\n                        <ul style={{listStyle:'none', padding:0, marginTop:12, display:'grid', gridTemplateColumns:'repeat(2, minmax(0, 1fr))', gap:12}}>\n                          {duplicates.map(dup => (\n                            <li key={dup.id} style={{display:'flex', alignItems:'center', gap:12, padding:'0.6rem', borderRadius:10, background:'#fff', border:'1px solid #f0e1f5'}}>\n                              <img src={dup.imageUrl} alt={dup.name} width={44} height={44} style={{borderRadius:6, objectFit:'cover', background:'#eee'}} />\n                              <div style={{minWidth:0, flex:1}}>\n                                <div style={{fontWeight:600, color:'#441644', whiteSpace:'nowrap', overflow:'hidden', textOverflow:'ellipsis'}}>{dup.name}</div>\n                                <div style={{color:'#8c6a9b', fontSize:13, whiteSpace:'nowrap', overflow:'hidden', textOverflow:'ellipsis'}}>{dup.artists}</div>\n                              </div>\n                              <div title={`${dup.count} occurrences`} style={{minWidth:34, height:34, borderRadius:999, background:'#6e1a6e', color:'#fff', display:'flex', alignItems:'center', justifyContent:'center', fontWeight:800}}>{dup.count}</div>\n                            </li>\n                          ))}\n                        </ul>\n                      )}\n                    </div>\n                  )}\n\n                  {checked && duplicates.length === 0 && (\n                    <div style={{background:'#eafbe7',color:'#1a7f37',padding:'0.8rem 1.1rem',borderRadius:12,fontWeight:'bold',boxShadow:'0 2px 8px #eafbe7', border:'1px solid #c9efc4'}}>✅ No duplicates</div>\n                  )}\n                </div>\n                {/* Always show pagination and tracks, even before duplicate check/fix */}\n                {tracksLoading ? <p>Loading tracks...</p> : (\n                  <>\n                    <ul style={{listStyle:'none', padding:0, maxHeight: '350px', overflowY: 'auto'}}>\n                      {pagedTracks.map((item, idx) => (\n                        <li key={item.track?.id || idx} style={{marginBottom: 12, padding:8, borderRadius:6, background:'#faf6ff', boxShadow:'0 1px 4px rgba(68,22,68,0.04)'}}>\n                          <span style={{fontWeight:500}}>{item.track?.name}</span>\n                          <span style={{marginLeft:8, color:'#888'}}>{item.track?.artists?.map(a=>a.name).join(', ')}</span>\n                        </li>\n                      ))}\n                    </ul>\n                    {totalPages > 1 && (\n                      <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                        <button onClick={() => setTrackPage(p => Math.max(0, p-1))} disabled={trackPage===0} style={{padding:'0.3rem 1rem',borderRadius:6,border:'none',background:'#eee',color:'#441644',fontWeight:'bold',cursor:trackPage===0?'not-allowed':'pointer'}}>Prev</button>\n                        <span style={{alignSelf:'center'}}>Page {trackPage+1} of {totalPages}</span>\n                        <button onClick={() => setTrackPage(p => Math.min(totalPages-1, p+1))} disabled={trackPage===totalPages-1} style={{padding:'0.3rem 1rem',borderRadius:6,border:'none',background:'#eee',color:'#441644',fontWeight:'bold',cursor:trackPage===totalPages-1?'not-allowed':'pointer'}}>Next</button>\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            ) : (\n              <div style={{color:'#888', textAlign:'center', marginTop:'4rem'}}>Select a playlist to view its tracks</div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Playlists;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}