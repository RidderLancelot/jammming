{"ast":null,"code":"var _jsxFileName = \"/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/Playlist.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst type = false;\nfunction Playlist({\n  playlist,\n  onRemoveTrack,\n  playlistName,\n  handlePlaylistNameChange,\n  onSavePlaylist\n}) {\n  _s();\n  const [duplicates, setDuplicates] = useState([]);\n  function givInformation(e) {\n    e.preventDefault();\n    if (onSavePlaylist) {\n      onSavePlaylist();\n    }\n  }\n  function checkDuplicates(e) {\n    e.preventDefault();\n    const seen = new Set();\n    const dups = [];\n    for (const track of playlist) {\n      if (seen.has(track.id)) dups.push(track);else seen.add(track.id);\n    }\n    setDuplicates(dups);\n  }\n  function fixDuplicates() {\n    const seen = new Set();\n    const filtered = playlist.filter(track => {\n      if (seen.has(track.id)) return false;\n      seen.add(track.id);\n      return true;\n    });\n    setDuplicates([]);\n    // Replace playlist with filtered (simulate parent update)\n    if (typeof window !== 'undefined' && window.dispatchEvent) {\n      window.dispatchEvent(new CustomEvent('fixPlaylistDuplicates', {\n        detail: filtered\n      }));\n    }\n  }\n\n  // Listen for fix event in App.js\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Playlist\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePlaylistNameChange,\n        type: \"text\",\n        name: \"save-to-spotify\",\n        placeholder: playlistName,\n        className: \"PlaylistName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tracklist\",\n        children: playlist.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Track\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"SongName\",\n            children: [track.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => onRemoveTrack(track.index),\n              className: \"type\",\n              children: type ? \"+\" : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"SongInfo\",\n            children: [track.artists.map(artist => artist).join(', '), \" | \", track.album]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, track.index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"saveToSpotify\",\n        onClick: givInformation,\n        children: \"SAVE TO SPOTIFY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: 10\n        },\n        onClick: checkDuplicates,\n        children: \"Check Duplicates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), duplicates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10,\n          color: '#a00',\n          fontWeight: 'bold'\n        },\n        children: [\"Duplicate songs found!\", /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 10\n          },\n          onClick: fixDuplicates,\n          children: \"Fix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlist, \"xYwaDdt+o/fgRUo9bUjeNMLbbUw=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","type","Playlist","playlist","onRemoveTrack","playlistName","handlePlaylistNameChange","onSavePlaylist","_s","duplicates","setDuplicates","givInformation","e","preventDefault","checkDuplicates","seen","Set","dups","track","has","id","push","add","fixDuplicates","filtered","filter","window","dispatchEvent","CustomEvent","detail","className","children","onChange","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","index","artists","artist","join","album","style","marginLeft","length","marginTop","color","fontWeight","_c","$RefreshReg$"],"sources":["/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/Playlist.js"],"sourcesContent":["import { useState } from 'react';\nconst type = false;\n\nfunction Playlist( { playlist, onRemoveTrack, playlistName, handlePlaylistNameChange, onSavePlaylist } ) {\n  const [duplicates, setDuplicates] = useState([]);\n\n  function givInformation(e) {\n    e.preventDefault();\n    if (onSavePlaylist) {\n      onSavePlaylist();\n    }\n  }\n\n  function checkDuplicates(e) {\n    e.preventDefault();\n    const seen = new Set();\n    const dups = [];\n    for (const track of playlist) {\n      if (seen.has(track.id)) dups.push(track);\n      else seen.add(track.id);\n    }\n    setDuplicates(dups);\n  }\n\n  function fixDuplicates() {\n    const seen = new Set();\n    const filtered = playlist.filter(track => {\n      if (seen.has(track.id)) return false;\n      seen.add(track.id);\n      return true;\n    });\n    setDuplicates([]);\n    // Replace playlist with filtered (simulate parent update)\n    if (typeof window !== 'undefined' && window.dispatchEvent) {\n      window.dispatchEvent(new CustomEvent('fixPlaylistDuplicates', { detail: filtered }));\n    }\n  }\n\n  // Listen for fix event in App.js\n\n  return (\n    <div className=\"Playlist\">\n      <form>\n        <input onChange={handlePlaylistNameChange} type=\"text\" name=\"save-to-spotify\" placeholder={playlistName} className=\"PlaylistName\"></input>\n        <div className=\"Tracklist\">\n          {playlist.map((track) => (\n            <div key={track.index} className=\"Track\">\n              <h4 className=\"SongName\">\n                {track.name} <span onClick={() => onRemoveTrack(track.index)} className=\"type\">{type ? \"+\": \"-\"}</span>\n              </h4>\n              <p className=\"SongInfo\">\n                {track.artists.map(artist => artist).join(', ')} | {track.album}\n              </p>\n            </div>\n          ))}\n        </div>\n        <button className=\"saveToSpotify\" onClick={givInformation}>SAVE TO SPOTIFY</button>\n        <button style={{marginLeft: 10}} onClick={checkDuplicates}>Check Duplicates</button>\n        {duplicates.length > 0 && (\n          <div style={{marginTop: 10, color: '#a00', fontWeight: 'bold'}}>\n            Duplicate songs found!\n            <button style={{marginLeft: 10}} onClick={fixDuplicates}>Fix</button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default Playlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}