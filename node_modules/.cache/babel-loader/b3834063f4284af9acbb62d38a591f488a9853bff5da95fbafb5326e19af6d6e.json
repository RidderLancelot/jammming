{"ast":null,"code":"var _jsxFileName = \"/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/Playlists.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getAccessToken, getCurrentUserId } from './Spotify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlists() {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [tracksLoading, setTracksLoading] = useState(false);\n  const [duplicates, setDuplicates] = useState([]);\n  const [fixing, setFixing] = useState(false);\n  const [checked, setChecked] = useState(false); // Add a state to track if checkDuplicates was run\n  const [checking, setChecking] = useState(false);\n  const [checkProgress, setCheckProgress] = useState(0);\n\n  // Pagination state\n  const [trackPage, setTrackPage] = useState(0);\n  const [totalTracks, setTotalTracks] = useState(0);\n  const TRACKS_PER_PAGE = 100;\n  useEffect(() => {\n    async function fetchUserAndPlaylists() {\n      try {\n        const token = getAccessToken();\n        if (!token) throw new Error('No access token');\n        const uid = await getCurrentUserId();\n        let allPlaylists = [];\n        let url = 'https://api.spotify.com/v1/me/playlists?limit=50';\n        while (url) {\n          const response = await fetch(url, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (!response.ok) throw new Error('Failed to load playlists');\n          const data = await response.json();\n          allPlaylists = allPlaylists.concat(data.items || []);\n          url = data.next;\n        }\n        // Only show playlists owned by the user\n        const ownedPlaylists = allPlaylists.filter(p => p.owner && p.owner.id === uid);\n        setPlaylists(ownedPlaylists);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchUserAndPlaylists();\n  }, []);\n\n  // Only fetch one page at a time for display\n  async function fetchTracksPage(playlistId, page) {\n    const token = getAccessToken();\n    const offset = page * TRACKS_PER_PAGE;\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=${TRACKS_PER_PAGE}&offset=${offset}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return {\n      items: data.items || [],\n      total: data.total || 0\n    };\n  }\n  async function handleSelect(playlist) {\n    setSelected(playlist);\n    setTracksLoading(true);\n    setTracks([]);\n    setDuplicates([]);\n    setChecked(false);\n    setTrackPage(0);\n    try {\n      const {\n        items,\n        total\n      } = await fetchTracksPage(playlist.id, 0);\n      setTracks(items);\n      setTotalTracks(total);\n    } finally {\n      setTracksLoading(false);\n    }\n  }\n\n  // For duplicate check, fetch all tracks in batches and show progress\n  async function checkDuplicates() {\n    if (!selected) return;\n    setChecked(false);\n    setDuplicates([]);\n    setChecking(true);\n    let allTracks = [];\n    let offset = 0;\n    let percent = 0;\n    const token = getAccessToken();\n    while (offset < totalTracks) {\n      const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (data.items) allTracks = allTracks.concat(data.items);\n      offset += 100;\n      percent = Math.min(100, Math.round(offset / totalTracks * 100));\n      setCheckProgress(percent);\n    }\n    const count = {};\n    for (const item of allTracks) {\n      var _item$track;\n      const id = (_item$track = item.track) === null || _item$track === void 0 ? void 0 : _item$track.id;\n      if (!id) continue;\n      count[id] = (count[id] || 0) + 1;\n    }\n    const dups = Object.entries(count).filter(([_, c]) => c > 1).map(([_, c]) => {\n      var _allTracks$find;\n      const track = (_allTracks$find = allTracks.find(item => {\n        var _item$track2;\n        return ((_item$track2 = item.track) === null || _item$track2 === void 0 ? void 0 : _item$track2.id) === _;\n      })) === null || _allTracks$find === void 0 ? void 0 : _allTracks$find.track;\n      return {\n        id: _,\n        name: track === null || track === void 0 ? void 0 : track.name,\n        count: c\n      };\n    });\n    setDuplicates(dups);\n    setChecked(true);\n    setChecking(false);\n    setCheckProgress(0);\n  }\n  async function fixDuplicates() {\n    setFixing(true);\n    try {\n      const token = getAccessToken();\n      // Fetch all tracks in the playlist (not just paged)\n      let allTracks = [];\n      let offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (data.items) allTracks = allTracks.concat(data.items);\n        offset += 100;\n      }\n      // Find duplicates and their positions\n      const seen = new Map(); // id -> [positions]\n      allTracks.forEach((item, idx) => {\n        var _item$track3;\n        const trackId = (_item$track3 = item.track) === null || _item$track3 === void 0 ? void 0 : _item$track3.id;\n        if (!trackId) return;\n        if (!seen.has(trackId)) seen.set(trackId, []);\n        seen.get(trackId).push(idx);\n      });\n      // For each duplicate, remove all by URI, then re-add one at the first occurrence\n      for (const [, positions] of seen.entries()) {\n        if (positions.length > 1) {\n          const uri = allTracks[positions[0]].track.uri;\n          // Remove all occurrences by URI\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'DELETE',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              tracks: [{\n                uri\n              }]\n            })\n          });\n          // Re-add one copy at the position of the first occurrence\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'POST',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              uris: [uri],\n              position: positions[0]\n            })\n          });\n        }\n      }\n      // Refetch tracks after removal\n      let newTracks = [];\n      offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (data.items) newTracks = newTracks.concat(data.items);\n        offset += 100;\n      }\n      setTracks(newTracks);\n      setDuplicates([]);\n    } catch (e) {\n      alert('Failed to update playlist on Spotify.');\n      console.error(e);\n    }\n    setFixing(false);\n  }\n\n  // Pagination controls\n  const pagedTracks = tracks.slice(trackPage * TRACKS_PER_PAGE, (trackPage + 1) * TRACKS_PER_PAGE);\n  const totalPages = Math.ceil(tracks.length / TRACKS_PER_PAGE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlaylistsPage\",\n    style: {\n      maxWidth: 800,\n      margin: '2rem auto',\n      background: '#fff',\n      borderRadius: 16,\n      boxShadow: '0 4px 24px rgba(68,22,68,0.12)',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: 'rgb(68,22,68)',\n        marginBottom: '2rem'\n      },\n      children: \"Your Spotify Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0,\n          width: '40%',\n          borderRight: '1px solid #eee',\n          maxHeight: '400px',\n          overflowY: 'auto'\n        },\n        children: playlists.map(playlist => {\n          var _playlist$images$;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: 24,\n              cursor: 'pointer',\n              background: (selected === null || selected === void 0 ? void 0 : selected.id) === playlist.id ? '#f3e6fa' : 'transparent',\n              borderRadius: 8,\n              padding: 8,\n              transition: 'background 0.2s'\n            },\n            onClick: () => handleSelect(playlist),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n              alt: \"cover\",\n              width: 64,\n              height: 64,\n              style: {\n                verticalAlign: 'middle',\n                borderRadius: 8,\n                boxShadow: '0 2px 8px rgba(68,22,68,0.08)',\n                objectFit: 'cover',\n                width: 64,\n                height: 64\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 16,\n                fontWeight: 600,\n                color: 'rgb(68,22,68)'\n              },\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 8,\n                color: '#888',\n                fontSize: 12\n              },\n              children: [playlist.tracks.total, \" tracks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, playlist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 0\n        },\n        children: selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: 'rgb(68,22,68)',\n              marginBottom: 0\n            },\n            children: selected.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 16,\n              margin: '16px 0 24px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkDuplicates,\n              style: {\n                padding: '0.5rem 1.2rem',\n                background: 'linear-gradient(90deg, #441644 60%, #a259c6 100%)',\n                color: '#fff',\n                border: 'none',\n                borderRadius: 6,\n                fontWeight: 'bold',\n                cursor: 'pointer',\n                boxShadow: '0 2px 8px rgba(68,22,68,0.08)',\n                letterSpacing: 1\n              },\n              disabled: checking,\n              children: checking ? `Checking... ${checkProgress}%` : 'Check Duplicates'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), duplicates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#fff0f6',\n                color: '#a00',\n                padding: '0.7rem 1.2rem',\n                borderRadius: 10,\n                fontWeight: 'bold',\n                display: 'flex',\n                alignItems: 'center',\n                gap: 16,\n                boxShadow: '0 2px 8px #f3e6fa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 600,\n                  color: '#a00'\n                },\n                children: [\"Duplicates: \", duplicates.length, \" found\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  margin: 0,\n                  paddingLeft: 16,\n                  color: '#a00',\n                  fontWeight: 400,\n                  fontSize: 15\n                },\n                children: duplicates.map(dup => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [dup.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: 600\n                    },\n                    children: [\"(\", dup.count, \" times)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 55\n                  }, this)]\n                }, dup.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginLeft: 10,\n                  padding: '0.3rem 1rem',\n                  background: 'linear-gradient(90deg, #a00 60%, #d66 100%)',\n                  color: '#fff',\n                  border: 'none',\n                  borderRadius: 6,\n                  fontWeight: 'bold',\n                  cursor: 'pointer',\n                  boxShadow: '0 1px 4px #f3e6fa'\n                },\n                onClick: fixDuplicates,\n                disabled: fixing,\n                children: fixing ? 'Fixing...' : 'Fix'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this), checked && duplicates.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#eafbe7',\n                color: '#1a7f37',\n                padding: '0.7rem 1.2rem',\n                borderRadius: 10,\n                fontWeight: 'bold',\n                boxShadow: '0 2px 8px #eafbe7'\n              },\n              children: \"No duplicates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), tracksLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading tracks...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyle: 'none',\n                padding: 0,\n                maxHeight: '350px',\n                overflowY: 'auto'\n              },\n              children: tracks.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  color: '#888',\n                  textAlign: 'center',\n                  padding: '2rem'\n                },\n                children: \"No tracks found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 25\n              }, this) : pagedTracks.map((item, idx) => {\n                var _item$track4, _item$track5, _item$track6, _item$track6$artists;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    marginBottom: 12,\n                    padding: 8,\n                    borderRadius: 6,\n                    background: '#faf6ff',\n                    boxShadow: '0 1px 4px rgba(68,22,68,0.04)'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: 500\n                    },\n                    children: (_item$track5 = item.track) === null || _item$track5 === void 0 ? void 0 : _item$track5.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginLeft: 8,\n                      color: '#888'\n                    },\n                    children: (_item$track6 = item.track) === null || _item$track6 === void 0 ? void 0 : (_item$track6$artists = _item$track6.artists) === null || _item$track6$artists === void 0 ? void 0 : _item$track6$artists.map(a => a.name).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 29\n                  }, this)]\n                }, ((_item$track4 = item.track) === null || _item$track4 === void 0 ? void 0 : _item$track4.id) || idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this), totalPages > 1 && tracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 8,\n                marginTop: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setTrackPage(p => Math.max(0, p - 1)),\n                disabled: trackPage === 0,\n                style: {\n                  padding: '0.3rem 1rem',\n                  borderRadius: 6,\n                  border: 'none',\n                  background: '#eee',\n                  color: '#441644',\n                  fontWeight: 'bold',\n                  cursor: trackPage === 0 ? 'not-allowed' : 'pointer'\n                },\n                children: \"Prev\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  alignSelf: 'center'\n                },\n                children: [\"Page \", trackPage + 1, \" of \", totalPages]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setTrackPage(p => Math.min(totalPages - 1, p + 1)),\n                disabled: trackPage === totalPages - 1,\n                style: {\n                  padding: '0.3rem 1rem',\n                  borderRadius: 6,\n                  border: 'none',\n                  background: '#eee',\n                  color: '#441644',\n                  fontWeight: 'bold',\n                  cursor: trackPage === totalPages - 1 ? 'not-allowed' : 'pointer'\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#888',\n            textAlign: 'center',\n            marginTop: '4rem'\n          },\n          children: \"Select a playlist to view its tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlists, \"IuPz72352v1hp+BB72o3BnOTxqU=\");\n_c = Playlists;\nexport default Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["useEffect","useState","getAccessToken","getCurrentUserId","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlists","_s","playlists","setPlaylists","loading","setLoading","error","setError","selected","setSelected","tracks","setTracks","tracksLoading","setTracksLoading","duplicates","setDuplicates","fixing","setFixing","checked","setChecked","checking","setChecking","checkProgress","setCheckProgress","trackPage","setTrackPage","totalTracks","setTotalTracks","TRACKS_PER_PAGE","fetchUserAndPlaylists","token","Error","uid","allPlaylists","url","response","fetch","headers","Authorization","ok","data","json","concat","items","next","ownedPlaylists","filter","p","owner","id","err","message","fetchTracksPage","playlistId","page","offset","total","handleSelect","playlist","checkDuplicates","allTracks","percent","Math","min","round","count","item","_item$track","track","dups","Object","entries","_","c","map","_allTracks$find","find","_item$track2","name","fixDuplicates","seen","Map","forEach","idx","_item$track3","trackId","has","set","get","push","positions","length","uri","method","body","JSON","stringify","uris","position","newTracks","e","alert","console","pagedTracks","slice","totalPages","ceil","className","style","maxWidth","margin","background","borderRadius","boxShadow","padding","children","textAlign","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","listStyle","width","borderRight","maxHeight","overflowY","_playlist$images$","cursor","transition","onClick","src","images","alt","height","verticalAlign","objectFit","marginLeft","fontWeight","fontSize","flex","minWidth","alignItems","border","letterSpacing","disabled","paddingLeft","dup","_item$track4","_item$track5","_item$track6","_item$track6$artists","artists","a","join","justifyContent","marginTop","max","alignSelf","_c","$RefreshReg$"],"sources":["/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/Playlists.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getAccessToken, getCurrentUserId } from './Spotify';\n\nfunction Playlists() {\n  const [playlists, setPlaylists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [tracks, setTracks] = useState([]);\n  const [tracksLoading, setTracksLoading] = useState(false);\n  const [duplicates, setDuplicates] = useState([]);\n  const [fixing, setFixing] = useState(false);\n  const [checked, setChecked] = useState(false); // Add a state to track if checkDuplicates was run\n  const [checking, setChecking] = useState(false);\n  const [checkProgress, setCheckProgress] = useState(0);\n\n  // Pagination state\n  const [trackPage, setTrackPage] = useState(0);\n  const [totalTracks, setTotalTracks] = useState(0);\n  const TRACKS_PER_PAGE = 100;\n\n  useEffect(() => {\n    async function fetchUserAndPlaylists() {\n      try {\n        const token = getAccessToken();\n        if (!token) throw new Error('No access token');\n        const uid = await getCurrentUserId();\n        let allPlaylists = [];\n        let url = 'https://api.spotify.com/v1/me/playlists?limit=50';\n        while (url) {\n          const response = await fetch(url, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          if (!response.ok) throw new Error('Failed to load playlists');\n          const data = await response.json();\n          allPlaylists = allPlaylists.concat(data.items || []);\n          url = data.next;\n        }\n        // Only show playlists owned by the user\n        const ownedPlaylists = allPlaylists.filter(p => p.owner && p.owner.id === uid);\n        setPlaylists(ownedPlaylists);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchUserAndPlaylists();\n  }, []);\n\n  // Only fetch one page at a time for display\n  async function fetchTracksPage(playlistId, page) {\n    const token = getAccessToken();\n    const offset = page * TRACKS_PER_PAGE;\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=${TRACKS_PER_PAGE}&offset=${offset}`,\n      { headers: { Authorization: `Bearer ${token}` } });\n    const data = await response.json();\n    return { items: data.items || [], total: data.total || 0 };\n  }\n\n  async function handleSelect(playlist) {\n    setSelected(playlist);\n    setTracksLoading(true);\n    setTracks([]);\n    setDuplicates([]);\n    setChecked(false);\n    setTrackPage(0);\n    try {\n      const { items, total } = await fetchTracksPage(playlist.id, 0);\n      setTracks(items);\n      setTotalTracks(total);\n    } finally {\n      setTracksLoading(false);\n    }\n  }\n\n  // For duplicate check, fetch all tracks in batches and show progress\n  async function checkDuplicates() {\n    if (!selected) return;\n    setChecked(false);\n    setDuplicates([]);\n    setChecking(true);\n    let allTracks = [];\n    let offset = 0;\n    let percent = 0;\n    const token = getAccessToken();\n    while (offset < totalTracks) {\n      const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`,\n        { headers: { Authorization: `Bearer ${token}` } });\n      const data = await response.json();\n      if (data.items) allTracks = allTracks.concat(data.items);\n      offset += 100;\n      percent = Math.min(100, Math.round((offset / totalTracks) * 100));\n      setCheckProgress(percent);\n    }\n    const count = {};\n    for (const item of allTracks) {\n      const id = item.track?.id;\n      if (!id) continue;\n      count[id] = (count[id] || 0) + 1;\n    }\n    const dups = Object.entries(count)\n      .filter(([_, c]) => c > 1)\n      .map(([_, c]) => {\n        const track = allTracks.find(item => item.track?.id === _ )?.track;\n        return { id: _, name: track?.name, count: c };\n      });\n    setDuplicates(dups);\n    setChecked(true);\n    setChecking(false);\n    setCheckProgress(0);\n  }\n\n  async function fixDuplicates() {\n    setFixing(true);\n    try {\n      const token = getAccessToken();\n      // Fetch all tracks in the playlist (not just paged)\n      let allTracks = [];\n      let offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`,\n          { headers: { Authorization: `Bearer ${token}` } });\n        const data = await response.json();\n        if (data.items) allTracks = allTracks.concat(data.items);\n        offset += 100;\n      }\n      // Find duplicates and their positions\n      const seen = new Map(); // id -> [positions]\n      allTracks.forEach((item, idx) => {\n        const trackId = item.track?.id;\n        if (!trackId) return;\n        if (!seen.has(trackId)) seen.set(trackId, []);\n        seen.get(trackId).push(idx);\n      });\n      // For each duplicate, remove all by URI, then re-add one at the first occurrence\n      for (const [, positions] of seen.entries()) {\n        if (positions.length > 1) {\n          const uri = allTracks[positions[0]].track.uri;\n          // Remove all occurrences by URI\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'DELETE',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ tracks: [{ uri }] }),\n          });\n          // Re-add one copy at the position of the first occurrence\n          await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks`, {\n            method: 'POST',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ uris: [uri], position: positions[0] }),\n          });\n        }\n      }\n      // Refetch tracks after removal\n      let newTracks = [];\n      offset = 0;\n      while (offset < totalTracks) {\n        const response = await fetch(`https://api.spotify.com/v1/playlists/${selected.id}/tracks?limit=100&offset=${offset}`,\n          { headers: { Authorization: `Bearer ${token}` } });\n        const data = await response.json();\n        if (data.items) newTracks = newTracks.concat(data.items);\n        offset += 100;\n      }\n      setTracks(newTracks);\n      setDuplicates([]);\n    } catch (e) {\n      alert('Failed to update playlist on Spotify.');\n      console.error(e);\n    }\n    setFixing(false);\n  }\n\n  // Pagination controls\n  const pagedTracks = tracks.slice(trackPage * TRACKS_PER_PAGE, (trackPage + 1) * TRACKS_PER_PAGE);\n  const totalPages = Math.ceil(tracks.length / TRACKS_PER_PAGE);\n\n  return (\n    <div className=\"PlaylistsPage\" style={{maxWidth: 800, margin: '2rem auto', background: '#fff', borderRadius: 16, boxShadow: '0 4px 24px rgba(68,22,68,0.12)', padding: '2rem'}}>\n      <h1 style={{textAlign:'center', color:'rgb(68,22,68)', marginBottom: '2rem'}}>Your Spotify Playlists</h1>\n      {loading && <p>Loading...</p>}\n      {error && <p style={{color:'red'}}>Error: {error}</p>}\n      {!loading && !error && (\n        <div style={{display:'flex', gap: '2rem'}}>\n          <ul style={{listStyle:'none', padding:0, width:'40%', borderRight:'1px solid #eee', maxHeight: '400px', overflowY: 'auto'}}>\n            {playlists.map((playlist) => (\n              <li key={playlist.id} style={{marginBottom: 24, cursor:'pointer', background:selected?.id===playlist.id?'#f3e6fa':'transparent', borderRadius:8, padding:8, transition:'background 0.2s'}} onClick={() => handleSelect(playlist)}>\n                <img src={playlist.images[0]?.url} alt=\"cover\" width={64} height={64} style={{verticalAlign:'middle', borderRadius:8, boxShadow:'0 2px 8px rgba(68,22,68,0.08)', objectFit:'cover', width:64, height:64}} />\n                <span style={{marginLeft: 16, fontWeight:600, color:'rgb(68,22,68)'}}>{playlist.name}</span>\n                <span style={{marginLeft: 8, color:'#888', fontSize:12}}>{playlist.tracks.total} tracks</span>\n              </li>\n            ))}\n          </ul>\n          <div style={{flex:1, minWidth:0}}>\n            {selected ? (\n              <div>\n                <h2 style={{color:'rgb(68,22,68)', marginBottom: 0}}>{selected.name}</h2>\n                <div style={{display:'flex',alignItems:'center',gap:16,margin:'16px 0 24px 0'}}>\n                  <button onClick={checkDuplicates} style={{padding:'0.5rem 1.2rem',background:'linear-gradient(90deg, #441644 60%, #a259c6 100%)',color:'#fff',border:'none',borderRadius:6,fontWeight:'bold',cursor:'pointer',boxShadow:'0 2px 8px rgba(68,22,68,0.08)',letterSpacing:1}} disabled={checking}>\n                    {checking ? `Checking... ${checkProgress}%` : 'Check Duplicates'}\n                  </button>\n                  {duplicates.length > 0 && (\n                    <div style={{background:'#fff0f6',color:'#a00',padding:'0.7rem 1.2rem',borderRadius:10,fontWeight:'bold',display:'flex',alignItems:'center',gap:16,boxShadow:'0 2px 8px #f3e6fa'}}>\n                      <span style={{fontWeight:600, color:'#a00'}}>Duplicates: {duplicates.length} found</span>\n                      <ul style={{margin:0,paddingLeft:16, color:'#a00', fontWeight:400, fontSize:15}}>\n                        {duplicates.map(dup => (\n                          <li key={dup.id}>{dup.name} <span style={{fontWeight:600}}>({dup.count} times)</span></li>\n                        ))}\n                      </ul>\n                      <button style={{marginLeft: 10, padding:'0.3rem 1rem',background:'linear-gradient(90deg, #a00 60%, #d66 100%)',color:'#fff',border:'none',borderRadius:6,fontWeight:'bold',cursor:'pointer',boxShadow:'0 1px 4px #f3e6fa'}} onClick={fixDuplicates} disabled={fixing}>{fixing ? 'Fixing...' : 'Fix'}</button>\n                    </div>\n                  )}\n                  {checked && duplicates.length === 0 && (\n                    <div style={{background:'#eafbe7',color:'#1a7f37',padding:'0.7rem 1.2rem',borderRadius:10,fontWeight:'bold',boxShadow:'0 2px 8px #eafbe7'}}>No duplicates</div>\n                  )}\n                </div>\n                {/* Always show pagination and tracks, even after duplicate check, not kun efter fix */}\n                {tracksLoading ? <p>Loading tracks...</p> : (\n                  <>\n                    <ul style={{listStyle:'none', padding:0, maxHeight: '350px', overflowY: 'auto'}}>\n                      {tracks.length === 0 ? (\n                        <li style={{color:'#888', textAlign:'center', padding:'2rem'}}>No tracks found.</li>\n                      ) : (\n                        pagedTracks.map((item, idx) => (\n                          <li key={item.track?.id || idx} style={{marginBottom: 12, padding:8, borderRadius:6, background:'#faf6ff', boxShadow:'0 1px 4px rgba(68,22,68,0.04)'}}>\n                            <span style={{fontWeight:500}}>{item.track?.name}</span>\n                            <span style={{marginLeft:8, color:'#888'}}>{item.track?.artists?.map(a=>a.name).join(', ')}</span>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                    {totalPages > 1 && tracks.length > 0 && (\n                      <div style={{display:'flex',justifyContent:'center',gap:8,marginTop:12}}>\n                        <button onClick={() => setTrackPage(p => Math.max(0, p-1))} disabled={trackPage===0} style={{padding:'0.3rem 1rem',borderRadius:6,border:'none',background:'#eee',color:'#441644',fontWeight:'bold',cursor:trackPage===0?'not-allowed':'pointer'}}>Prev</button>\n                        <span style={{alignSelf:'center'}}>Page {trackPage+1} of {totalPages}</span>\n                        <button onClick={() => setTrackPage(p => Math.min(totalPages-1, p+1))} disabled={trackPage===totalPages-1} style={{padding:'0.3rem 1rem',borderRadius:6,border:'none',background:'#eee',color:'#441644',fontWeight:'bold',cursor:trackPage===totalPages-1?'not-allowed':'pointer'}}>Next</button>\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            ) : (\n              <div style={{color:'#888', textAlign:'center', marginTop:'4rem'}}>Select a playlist to view its tracks</div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Playlists;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}