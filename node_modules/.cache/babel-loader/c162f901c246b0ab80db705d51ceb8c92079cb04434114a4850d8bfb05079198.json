{"ast":null,"code":"// Spotify API utility for authentication and search (Implicit Grant Flow)\nconst clientId = \"de8c5edcc39e4f3da974e2e22fe51915\";\nconst redirectUri = window.location.origin;\nlet accessToken;\nlet tokenExpirationTime;\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken && (!tokenExpirationTime || new Date().getTime() < tokenExpirationTime)) {\n      return accessToken;\n    }\n\n    // Check for access token in URL hash\n    const hash = window.location.hash;\n    if (hash) {\n      const params = new URLSearchParams(hash.substring(1));\n      const token = params.get('access_token');\n      const expiresIn = params.get('expires_in');\n      if (token && expiresIn) {\n        accessToken = token;\n        tokenExpirationTime = new Date().getTime() + Number(expiresIn) * 1000;\n        // Remove token from URL for cleanliness\n        window.history.replaceState({}, document.title, window.location.pathname);\n        // Set timeout to clear token after expiration\n        setTimeout(() => {\n          accessToken = null;\n          tokenExpirationTime = null;\n        }, Number(expiresIn) * 1000);\n        return accessToken;\n      }\n    }\n\n    // If no token, redirect to Spotify authorization\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=user-read-private&redirect_uri=${encodeURIComponent(redirectUri)}`;\n    window.location = authUrl;\n  },\n  async searchTracks(query) {\n    const token = this.getAccessToken();\n    if (!token) return [];\n    const q = encodeURIComponent(query);\n    const response = await fetch(`https://api.spotify.com/v1/search?q=${q}&type=track&limit=5`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (data.tracks && data.tracks.items) {\n      return data.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artists: track.artists.map(a => a.name),\n        album: track.album.name\n      }));\n    }\n    return [];\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["clientId","redirectUri","window","location","origin","accessToken","tokenExpirationTime","Spotify","getAccessToken","Date","getTime","hash","params","URLSearchParams","substring","token","get","expiresIn","Number","history","replaceState","document","title","pathname","setTimeout","authUrl","encodeURIComponent","searchTracks","query","q","response","fetch","headers","Authorization","data","json","tracks","items","map","track","id","name","artists","a","album"],"sources":["/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/Spotify.js"],"sourcesContent":["// Spotify API utility for authentication and search (Implicit Grant Flow)\nconst clientId = \"de8c5edcc39e4f3da974e2e22fe51915\";\nconst redirectUri = window.location.origin;\nlet accessToken;\nlet tokenExpirationTime;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken && (!tokenExpirationTime || new Date().getTime() < tokenExpirationTime)) {\n      return accessToken;\n    }\n\n    // Check for access token in URL hash\n    const hash = window.location.hash;\n    if (hash) {\n      const params = new URLSearchParams(hash.substring(1));\n      const token = params.get('access_token');\n      const expiresIn = params.get('expires_in');\n      if (token && expiresIn) {\n        accessToken = token;\n        tokenExpirationTime = new Date().getTime() + Number(expiresIn) * 1000;\n        // Remove token from URL for cleanliness\n        window.history.replaceState({}, document.title, window.location.pathname);\n        // Set timeout to clear token after expiration\n        setTimeout(() => {\n          accessToken = null;\n          tokenExpirationTime = null;\n        }, Number(expiresIn) * 1000);\n        return accessToken;\n      }\n    }\n\n    // If no token, redirect to Spotify authorization\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=user-read-private&redirect_uri=${encodeURIComponent(redirectUri)}`;\n    window.location = authUrl;\n  },\n\n  async searchTracks(query) {\n    const token = this.getAccessToken();\n    if (!token) return [];\n    const q = encodeURIComponent(query);\n    const response = await fetch(`https://api.spotify.com/v1/search?q=${q}&type=track&limit=5`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    });\n    const data = await response.json();\n    if (data.tracks && data.tracks.items) {\n      return data.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artists: track.artists.map(a => a.name),\n        album: track.album.name\n      }));\n    }\n    return [];\n  }\n};\n\nexport default Spotify;\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;AAC1C,IAAIC,WAAW;AACf,IAAIC,mBAAmB;AAEvB,MAAMC,OAAO,GAAG;EACdC,cAAcA,CAAA,EAAG;IACf,IAAIH,WAAW,KAAK,CAACC,mBAAmB,IAAI,IAAIG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGJ,mBAAmB,CAAC,EAAE;MACvF,OAAOD,WAAW;IACpB;;IAEA;IACA,MAAMM,IAAI,GAAGT,MAAM,CAACC,QAAQ,CAACQ,IAAI;IACjC,IAAIA,IAAI,EAAE;MACR,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACF,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;MACrD,MAAMC,KAAK,GAAGH,MAAM,CAACI,GAAG,CAAC,cAAc,CAAC;MACxC,MAAMC,SAAS,GAAGL,MAAM,CAACI,GAAG,CAAC,YAAY,CAAC;MAC1C,IAAID,KAAK,IAAIE,SAAS,EAAE;QACtBZ,WAAW,GAAGU,KAAK;QACnBT,mBAAmB,GAAG,IAAIG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGQ,MAAM,CAACD,SAAS,CAAC,GAAG,IAAI;QACrE;QACAf,MAAM,CAACiB,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAEpB,MAAM,CAACC,QAAQ,CAACoB,QAAQ,CAAC;QACzE;QACAC,UAAU,CAAC,MAAM;UACfnB,WAAW,GAAG,IAAI;UAClBC,mBAAmB,GAAG,IAAI;QAC5B,CAAC,EAAEY,MAAM,CAACD,SAAS,CAAC,GAAG,IAAI,CAAC;QAC5B,OAAOZ,WAAW;MACpB;IACF;;IAEA;IACA,MAAMoB,OAAO,GAAG,oDAAoDzB,QAAQ,6DAA6D0B,kBAAkB,CAACzB,WAAW,CAAC,EAAE;IAC1KC,MAAM,CAACC,QAAQ,GAAGsB,OAAO;EAC3B,CAAC;EAED,MAAME,YAAYA,CAACC,KAAK,EAAE;IACxB,MAAMb,KAAK,GAAG,IAAI,CAACP,cAAc,CAAC,CAAC;IACnC,IAAI,CAACO,KAAK,EAAE,OAAO,EAAE;IACrB,MAAMc,CAAC,GAAGH,kBAAkB,CAACE,KAAK,CAAC;IACnC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCF,CAAC,qBAAqB,EAAE;MAC1FG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUlB,KAAK;MAChC;IACF,CAAC,CAAC;IACF,MAAMmB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAACC,KAAK,EAAE;MACpC,OAAOH,IAAI,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAACC,KAAK,KAAK;QACrCC,EAAE,EAAED,KAAK,CAACC,EAAE;QACZC,IAAI,EAAEF,KAAK,CAACE,IAAI;QAChBC,OAAO,EAAEH,KAAK,CAACG,OAAO,CAACJ,GAAG,CAACK,CAAC,IAAIA,CAAC,CAACF,IAAI,CAAC;QACvCG,KAAK,EAAEL,KAAK,CAACK,KAAK,CAACH;MACrB,CAAC,CAAC,CAAC;IACL;IACA,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAelC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}