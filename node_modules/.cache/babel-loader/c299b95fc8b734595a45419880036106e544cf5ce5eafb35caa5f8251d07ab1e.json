{"ast":null,"code":"var _jsxFileName = \"/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/App.js\",\n  _s = $RefreshSig$();\nimport '../styles/App.css';\nimport '../styles/Header.css';\nimport SearchBar from './SearchBar';\nimport Playlist from './Playlist';\nimport Tracklist from './Tracklist';\nimport { useState, useEffect } from 'react';\nimport { searchTracks, savePlaylistToSpotify } from './Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [playlist, setPlaylist] = useState([]); // Start with an empty playlist\n  const [playlistName, setPlaylistName] = useState(\"Baddest Motherfucker\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  useEffect(() => {\n    function handleFix(e) {\n      setPlaylist(e.detail.map((track, i) => ({\n        ...track,\n        index: i + 1\n      })));\n    }\n    window.addEventListener('fixPlaylistDuplicates', handleFix);\n    return () => window.removeEventListener('fixPlaylistDuplicates', handleFix);\n  }, []);\n  function addTrackToPlaylist(track) {\n    setPlaylist(prevPlaylist => [...prevPlaylist, {\n      ...track,\n      index: prevPlaylist.length + 1,\n      uri: track.uri || `spotify:track:${track.id}`\n    }]);\n  }\n  const handlePlaylistNameChange = event => {\n    setPlaylistName(event.target.value);\n  };\n  function removeTrackFromPlaylist(index) {\n    setPlaylist(prevPlaylist => {\n      const updatedPlaylist = prevPlaylist.filter(track => track.index !== index);\n      return updatedPlaylist.map((track, index) => ({\n        ...track,\n        index: index + 1\n      }));\n    });\n  }\n  async function handleSearch(query) {\n    setLoading(true);\n    const results = await searchTracks(query);\n    setSearchResults(results);\n    setLoading(false);\n  }\n  async function handleSavePlaylist() {\n    setSaving(true);\n    const uris = playlist.map(track => track.uri);\n    try {\n      await savePlaylistToSpotify(playlistName, uris);\n      alert('Playlist saved to your Spotify account!');\n      setPlaylist([]);\n    } catch (e) {\n      alert(e.message || 'Failed to save playlist. Please try again.');\n    }\n    setSaving(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Tracklist, {\n          tracks: searchResults,\n          onAddTrack: addTrackToPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlist: playlist,\n        onRemoveTrack: removeTrackFromPlaylist,\n        playlistName: playlistName,\n        handlePlaylistNameChange: handlePlaylistNameChange,\n        onSavePlaylist: handleSavePlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), saving && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Saving playlist to Spotify...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t2M/KIkrBYX2/i5jI7AbEosswiA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SearchBar","Playlist","Tracklist","useState","useEffect","searchTracks","savePlaylistToSpotify","jsxDEV","_jsxDEV","App","_s","playlist","setPlaylist","playlistName","setPlaylistName","searchResults","setSearchResults","loading","setLoading","saving","setSaving","handleFix","e","detail","map","track","i","index","window","addEventListener","removeEventListener","addTrackToPlaylist","prevPlaylist","length","uri","id","handlePlaylistNameChange","event","target","value","removeTrackFromPlaylist","updatedPlaylist","filter","handleSearch","query","results","handleSavePlaylist","uris","alert","message","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","tracks","onAddTrack","onRemoveTrack","onSavePlaylist","_c","$RefreshReg$"],"sources":["/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/App.js"],"sourcesContent":["import '../styles/App.css';\nimport '../styles/Header.css';\nimport SearchBar from './SearchBar';\nimport Playlist from './Playlist';\nimport Tracklist from './Tracklist';\nimport { useState, useEffect } from 'react';\nimport { searchTracks, savePlaylistToSpotify } from './Spotify';\n\nfunction App() {\n  const [playlist, setPlaylist] = useState([]); // Start with an empty playlist\n  const [playlistName, setPlaylistName] = useState(\"Baddest Motherfucker\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  useEffect(() => {\n    function handleFix(e) {\n      setPlaylist(e.detail.map((track, i) => ({ ...track, index: i + 1 })));\n    }\n    window.addEventListener('fixPlaylistDuplicates', handleFix);\n    return () => window.removeEventListener('fixPlaylistDuplicates', handleFix);\n  }, []);\n\n  function addTrackToPlaylist(track) {\n    setPlaylist((prevPlaylist) => [...prevPlaylist, { ...track, index: prevPlaylist.length + 1, uri: track.uri || `spotify:track:${track.id}` }]);\n  }\n\n  const handlePlaylistNameChange = (event) => {\n    setPlaylistName(event.target.value);\n  };\n\n  function removeTrackFromPlaylist(index) {\n    setPlaylist((prevPlaylist) => {\n      const updatedPlaylist = prevPlaylist.filter((track) => track.index !== index);\n      return updatedPlaylist.map((track, index) => ({\n        ...track,\n        index: index + 1,\n      }));\n    });\n  }\n\n  async function handleSearch(query) {\n    setLoading(true);\n    const results = await searchTracks(query);\n    setSearchResults(results);\n    setLoading(false);\n  }\n\n  async function handleSavePlaylist() {\n    setSaving(true);\n    const uris = playlist.map(track => track.uri);\n    try {\n      await savePlaylistToSpotify(playlistName, uris);\n      alert('Playlist saved to your Spotify account!');\n      setPlaylist([]);\n    } catch (e) {\n      alert(e.message || 'Failed to save playlist. Please try again.');\n    }\n    setSaving(false);\n  }\n\n  return (\n    <div className=\"all\">\n      <SearchBar onSearch={handleSearch} />\n      <div className='flex'>\n        <div className=\"SearchResults\">\n          <h1>Results</h1>\n          {loading ? <p>Loading...</p> : <Tracklist tracks={searchResults} onAddTrack={addTrackToPlaylist} />}\n        </div>\n        <Playlist playlist={playlist} onRemoveTrack={removeTrackFromPlaylist} playlistName={playlistName} handlePlaylistNameChange={handlePlaylistNameChange} onSavePlaylist={handleSavePlaylist} />\n      </div>\n      {saving && <p>Saving playlist to Spotify...</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAO,sBAAsB;AAC7B,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,EAAEC,qBAAqB,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,sBAAsB,CAAC;EACxE,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,SAASiB,SAASA,CAACC,CAAC,EAAE;MACpBV,WAAW,CAACU,CAAC,CAACC,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,MAAM;QAAE,GAAGD,KAAK;QAAEE,KAAK,EAAED,CAAC,GAAG;MAAE,CAAC,CAAC,CAAC,CAAC;IACvE;IACAE,MAAM,CAACC,gBAAgB,CAAC,uBAAuB,EAAER,SAAS,CAAC;IAC3D,OAAO,MAAMO,MAAM,CAACE,mBAAmB,CAAC,uBAAuB,EAAET,SAAS,CAAC;EAC7E,CAAC,EAAE,EAAE,CAAC;EAEN,SAASU,kBAAkBA,CAACN,KAAK,EAAE;IACjCb,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;MAAE,GAAGP,KAAK;MAAEE,KAAK,EAAEK,YAAY,CAACC,MAAM,GAAG,CAAC;MAAEC,GAAG,EAAET,KAAK,CAACS,GAAG,IAAI,iBAAiBT,KAAK,CAACU,EAAE;IAAG,CAAC,CAAC,CAAC;EAC/I;EAEA,MAAMC,wBAAwB,GAAIC,KAAK,IAAK;IAC1CvB,eAAe,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,SAASC,uBAAuBA,CAACb,KAAK,EAAE;IACtCf,WAAW,CAAEoB,YAAY,IAAK;MAC5B,MAAMS,eAAe,GAAGT,YAAY,CAACU,MAAM,CAAEjB,KAAK,IAAKA,KAAK,CAACE,KAAK,KAAKA,KAAK,CAAC;MAC7E,OAAOc,eAAe,CAACjB,GAAG,CAAC,CAACC,KAAK,EAAEE,KAAK,MAAM;QAC5C,GAAGF,KAAK;QACRE,KAAK,EAAEA,KAAK,GAAG;MACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ;EAEA,eAAegB,YAAYA,CAACC,KAAK,EAAE;IACjC1B,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM2B,OAAO,GAAG,MAAMxC,YAAY,CAACuC,KAAK,CAAC;IACzC5B,gBAAgB,CAAC6B,OAAO,CAAC;IACzB3B,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,eAAe4B,kBAAkBA,CAAA,EAAG;IAClC1B,SAAS,CAAC,IAAI,CAAC;IACf,MAAM2B,IAAI,GAAGpC,QAAQ,CAACa,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACS,GAAG,CAAC;IAC7C,IAAI;MACF,MAAM5B,qBAAqB,CAACO,YAAY,EAAEkC,IAAI,CAAC;MAC/CC,KAAK,CAAC,yCAAyC,CAAC;MAChDpC,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOU,CAAC,EAAE;MACV0B,KAAK,CAAC1B,CAAC,CAAC2B,OAAO,IAAI,4CAA4C,CAAC;IAClE;IACA7B,SAAS,CAAC,KAAK,CAAC;EAClB;EAEA,oBACEZ,OAAA;IAAK0C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3C,OAAA,CAACR,SAAS;MAACoD,QAAQ,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrChD,OAAA;MAAK0C,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB3C,OAAA;QAAK0C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B3C,OAAA;UAAA2C,QAAA,EAAI;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACfvC,OAAO,gBAAGT,OAAA;UAAA2C,QAAA,EAAG;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAAGhD,OAAA,CAACN,SAAS;UAACuD,MAAM,EAAE1C,aAAc;UAAC2C,UAAU,EAAE3B;QAAmB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC,eACNhD,OAAA,CAACP,QAAQ;QAACU,QAAQ,EAAEA,QAAS;QAACgD,aAAa,EAAEnB,uBAAwB;QAAC3B,YAAY,EAAEA,YAAa;QAACuB,wBAAwB,EAAEA,wBAAyB;QAACwB,cAAc,EAAEd;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzL,CAAC,EACLrC,MAAM,iBAAIX,OAAA;MAAA2C,QAAA,EAAG;IAA6B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAAC9C,EAAA,CAlEQD,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}