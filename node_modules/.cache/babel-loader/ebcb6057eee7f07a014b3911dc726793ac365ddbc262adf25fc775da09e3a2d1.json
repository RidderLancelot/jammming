{"ast":null,"code":"var _jsxFileName = \"/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport '../styles/Header.css';\nimport SearchBar from './SearchBar';\nimport Playlist from './Playlist';\nimport Tracklist from './Tracklist';\nimport Spotify from './Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [playlist, setPlaylist] = useState([{\n    index: 1,\n    name: \"bad ones\",\n    artists: [\"Tate Mcrae\"],\n    album: \"Too Young to Be Sad\",\n    id: \"6CYT0souHUHKTO4EMzTUFg\"\n  }]);\n  const [playlistName, setPlaylistName] = useState(\"Baddest Motherfucker\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  function addTrackToPlaylist(track) {\n    setPlaylist(prevPlaylist => [...prevPlaylist, {\n      ...track,\n      index: prevPlaylist.length + 1\n    }]);\n  }\n  const handlePlaylistNameChange = event => {\n    setPlaylistName(event.target.value);\n  };\n  function removeTrackFromPlaylist(index) {\n    setPlaylist(prevPlaylist => {\n      const updatedPlaylist = prevPlaylist.filter(track => track.index !== index);\n      return updatedPlaylist.map((track, index) => ({\n        ...track,\n        index: index + 1\n      }));\n    });\n  }\n  async function handleSearch(term) {\n    setSearchTerm(term);\n    const results = await Spotify.searchTracks(term);\n    setSearchResults(results);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"purple\",\n            children: \"mmm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), \"ing\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tracklist, {\n          onAddTrack: addTrackToPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlist: playlist,\n        onRemoveTrack: removeTrackFromPlaylist,\n        playlistName: playlistName,\n        handlePlaylistNameChange: handlePlaylistNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeg vil gerne have en knap, hvor man kan se mine mest lyttede sange+kunstnere i hver m\\xE5ned(5)+\\xE5r(10)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hYlEicXNQbEfUNftWi3iRyjxywk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","Playlist","Tracklist","Spotify","jsxDEV","_jsxDEV","App","_s","playlist","setPlaylist","index","name","artists","album","id","playlistName","setPlaylistName","searchResults","setSearchResults","searchTerm","setSearchTerm","addTrackToPlaylist","track","prevPlaylist","length","handlePlaylistNameChange","event","target","value","removeTrackFromPlaylist","updatedPlaylist","filter","map","handleSearch","term","results","searchTracks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAddTrack","onRemoveTrack","_c","$RefreshReg$"],"sources":["/Users/lancelotraavig/Desktop/Coding/Websites/CodeCademy/Portfolio/jammming/src/Javascript/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/App.css';\nimport '../styles/Header.css';\nimport SearchBar from './SearchBar';\nimport Playlist from './Playlist';\nimport Tracklist from './Tracklist';\nimport Spotify from './Spotify';\n\nfunction App() {\n  const [playlist, setPlaylist] = useState([\n    { index: 1, name: \"bad ones\", artists: [\"Tate Mcrae\"], album: \"Too Young to Be Sad\", id: \"6CYT0souHUHKTO4EMzTUFg\" }\n  ]);\n  const [playlistName, setPlaylistName] = useState(\"Baddest Motherfucker\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  function addTrackToPlaylist(track) {\n    setPlaylist((prevPlaylist) => [...prevPlaylist, {...track, index: prevPlaylist.length + 1}]);\n  }\n\n  const handlePlaylistNameChange = (event) => {\n    setPlaylistName(event.target.value);\n  };\n\n  function removeTrackFromPlaylist(index) {\n    setPlaylist((prevPlaylist) => {\n      const updatedPlaylist = prevPlaylist.filter((track) => track.index !== index);\n\n      return updatedPlaylist.map((track, index) => ({\n        ...track,\n        index: index + 1, \n      }));\n    });\n  }\n\n  async function handleSearch(term) {\n    setSearchTerm(term);\n    const results = await Spotify.searchTracks(term);\n    setSearchResults(results);\n  }\n\n  return (\n    <div className=\"all\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Ja<span className=\"purple\">mmm</span>ing</h1>\n        </header>\n      </div>\n      <SearchBar onSearch={handleSearch} />\n      <div className='flex'>\n        <div className=\"SearchResults\">\n          <h1>Results</h1>\n          <Tracklist onAddTrack={addTrackToPlaylist} />\n        </div>\n        <Playlist playlist={playlist} onRemoveTrack={removeTrackFromPlaylist} playlistName={playlistName} handlePlaylistNameChange={handlePlaylistNameChange} />\n      </div>\n      <p>Jeg vil gerne have en knap, hvor man kan se mine mest lyttede sange+kunstnere i hver måned(5)+år(10)</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}